1
00:00:00,000 --> 00:00:04,000
As you write code with TypeScript, you

2
00:00:04,000 --> 00:00:08,000
see Constructors that follow a pattern like what you see here.

3
00:00:08,000 --> 00:00:12,000
So here we have two parameters in a Constructor and we use these two parameters

4
00:00:12,000 --> 00:00:16,000
to initialize the fields in this class. The code looks a little bit

5
00:00:16,000 --> 00:00:20,000
redundant. This dot x equals x and this dot y equals y.

6
00:00:20,000 --> 00:00:24,000
TypeScript has a fantastic feature that helps you achieve the same thing

7
00:00:24,000 --> 00:00:28,000
with less code. So here, we can

8
00:00:28,000 --> 00:00:32,000
delete these two fields here, and in our Constructor

9
00:00:32,000 --> 00:00:36,000
we can prefix our parameters with an Access

10
00:00:36,000 --> 00:00:40,000
Modifier. So here I want to have, two private fields

11
00:00:40,000 --> 00:00:44,000
x and y, I can simply prefix this

12
00:00:44,000 --> 00:00:48,000
with the private keyword like this.

13
00:00:48,000 --> 00:00:52,000
So TypeScript Compiler will generate these fields for us.

14
00:00:52,000 --> 00:00:56,000
And also, we don't need these ugly

15
00:00:56,000 --> 00:01:00,000
repetitive assignments either. So if you prefix

16
00:01:00,000 --> 00:01:04,000
a Constructor parameter with an access modifier whether private or public

17
00:01:04,000 --> 00:01:08,000
TypeScript Compiler will generate a field with the

18
00:01:08,000 --> 00:01:12,000
exact same name and it will also initialize that field with the value of this argument.

19
00:01:12,000 --> 00:01:16,000
It's one of my favorite features, and you're going to see that a lot

20
00:01:16,000 --> 00:01:20,000
in this course. Now, I'll clarify something before I finish this lecture,

21
00:01:20,000 --> 00:01:24,000
in this case, our fields were private, but if they were public we would

22
00:01:24,000 --> 00:01:28,000
use the pubic keyword here. So this means, when we create

23
00:01:28,000 --> 00:01:32,000
a point object, we can access

24
00:01:32,000 --> 00:01:36,000
the x field. Okay? So,

25
00:01:36,000 --> 00:01:40,000
I'm going to revert this back to the private.


